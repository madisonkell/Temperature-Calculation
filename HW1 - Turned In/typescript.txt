Script started on Tue 07 Feb 2023 11:00:06 PM EST
[?1034h]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ pwd
/home/m/mrkell/hw1
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ ls -l
total 32
-rwxr-xr-x 1 mrkell domain users 12944 Feb  7 22:47 [0m[01;32ma.out[0m
-rw-r--r-- 1 mrkell domain users  4434 Feb  7 22:46 hw1-kell.c
-rw-r--r-- 1 mrkell domain users   134 Feb  7 22:34 tempdata1.txt
-rw-r--r-- 1 mrkell domain users   325 Feb  7 22:35 tempdata2.txt
-rw-r--r-- 1 mrkell domain users     0 Feb  7 23:00 typescript
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ cat hw1-kell.c
// **********************************************
// Program1: Temperature calculation
// Course: CS451
// Student Name: Madison Kell
// Instructor: Il-Hyung Cho
// Date of submission: 2/8/23
// Program Description: 
//  -Computing temperature data - Finding the year, average 
//  -coldest month, hottest month, and average temp of each month
//  -from listed year data in a .txt file.
// **********************************************

#include <stdio.h>
#include <stdlib.h>

//struct holding all information for a year 
struct YearData {
   float temps[12]; 
   int year;                     
   float avg;
   int coldestI, hottestI;
};

//declaring functions to find average, coldest, and hottest month
float findAvg(float[]);
int findCold(float[]);
int findHot(float[]);

//pointer for struct
struct YearData* yearList;

//declaring function that finds the average temp of each month for all years
int findTempAvg(struct YearData data[], int numOfYears);

int main(){
    //declaring iterators
    int i, j;
    //storing first line of code to determine how many years are in the file
    int numOfYears;
    //to store year (given before the temperatures)
    int year;
    //creating a char * for the months of the year
    const char *months[12] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
    
    //asking user to input file
    char file_name[100];
    printf("Enter temperature file name:");
   
    //scanning the file
    scanf("%s", file_name);
    
    //ensuring the file is valid (got from slides)
    FILE* ptr = fopen(file_name, "r");
    if (ptr == NULL) {
        printf("no such file.");
        return 0;
    }

    //finding number of years in file
    fscanf(ptr, "%d", &numOfYears); 
     
    //dynamic array using info from slides
    yearList = malloc(numOfYears *(sizeof(struct YearData *)));

    //Printing the header
    printf("%s%12s%22s%16s%20s", "\nYear",  "Average", "Coldest Month", "Hottest Month", "\n==== \t ======= \t ============= \t ============ \n");
    
    //looping through the file however many times that the number of years tells me to
    for(i = 0; i < numOfYears; i++){
        //scanning for the year
        fscanf(ptr, "%d\n", &year);

        //scanning each years temperatures
        for (j = 0; j < 12; j++) {
            fscanf(ptr, "%f", &yearList[i].temps[j]);
        }

        //calling the functions
        yearList[i].year = year;
        yearList[i].avg = findAvg(yearList[i].temps);
        yearList[i].coldestI =  findCold(yearList[i].temps);
        yearList[i].hottestI = findHot(yearList[i].temps);
        
        //printing the results
      printf("%d%10.1f%15s (%.1f)%10s (%.1f)\n", yearList[i].year, yearList[i].avg, months[yearList[i].coldestI], yearList[i].temps[yearList[i].coldestI], months[yearList[i].hottestI], yearList[i].temps[yearList[i].hottestI]);
    }

    //printing title
    printf("\nAverage temperature\n");
    //looping through the months, printing out header
    for(i=0; i<12; i++){
        printf("%s\t ", months[i]);  
    }
    
    //calling final function: calculate the average of each month
    findTempAvg(yearList, numOfYears);
}

//finding the average of temperature of each year
float findAvg(float data[]){
    int i;
    float sum = 0.0;
    for(i=0; i<12; i++){
        sum += data[i];
    }
    return (sum/12);
}

//finding the coldest temperature of each year
int findCold(float data[]){
    int i;
    int min = 0;
    for(i=0; i<12; i++){
        if(data[i] < data[min]){
            min = i;
        }
    }
    return min;
}

//find the hottest temperature of each year
int findHot(float data[]){
    int i;
    int max = 0;
    for(i=0; i<12; i++){
        if(data[i] > data[max]){
            max = i;
        }
    }
    return max;
}

//fnding the average temperature of each month of all years
int findTempAvg(struct YearData data[], int numOfYears){
    int i, j;
    float average[12];
    //ensuring all averages are set to 0
    for(i=0; i<12; i++){
        average[i] = 0;
    }

    //looping through the temperature of each month, of each year
    for(i=0; i<numOfYears; i++){
        for(j=0; j<12; j++){
            average[j] += data[i].temps[j];
        }
    }

    //new line for formatting temp on next line
    printf("\n");

    //printing the result
    for(i=0; i<12; i++){
        printf("%.1f\t ", (average[i]/numOfYears));
    }
 
}
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ gcc hw1-kell.c
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ cat tep[Kmpdate[Ka1.txt
2
2010 5.5 20.9 29.3 49.0 74.1 91.3 105.2 100.5 83.7 51.1 18.8 -3.2
2011 10.0 15.1 30.1 45.5 60.3 85.1 99.9 104.4 90.8 67.8 45.5 22.2
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ cat[K[K[K./a.out
Enter temperature file name:tempdata1.txt

Year     Average         Coldest Month   Hottest Month
==== 	 ======= 	 ============= 	 ============ 
2010      52.2            Dec (-3.2)       Jul (105.2)
2011      56.4            Jan (10.0)       Aug (104.4)

Average temperature
Jan	 Feb	 Mar	 Apr	 May	 Jun	 Jul	 Aug	 Sep	 Oct	 Nov	 Dec	 
7.8	 18.0	 29.7	 47.2	 67.2	 88.2	 102.6	 102.4	 87.2	 59.5	 32.2	 9.5	 ]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ cat tempdata2.txt
5
2020 5.5 20.9 29.3 49.0 74.1 91.3 105.2 100.5 83.7 51.1 18.8 -3.2
2021 10.0 15.1 30.1 45.5 60.3 85.1 99.9 104.4 90.8 67.8 45.5 22.2
2022 51 23 45 56 67.1 100.3 10.2 18.5 43.7 81.1 28.8 -15.2
2023 33.0 44.1 44.1 67.5 66.3 99.1 12.9 14.4 120.8 9.8 89.5 34.2
2024 76.5 67.9 23.3 32.0 54.1 66.3 123.2 40.5 5.7 101.1 48.8 -30.2
]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ ./a.out
Enter temperature file name:tempdata2.txt

Year     Average         Coldest Month   Hottest Month
==== 	 ======= 	 ============= 	 ============ 
2020      52.2            Dec (-3.2)       Jul (105.2)
2021      56.4            Jan (10.0)       Aug (104.4)
2022      42.5            Dec (-15.2)       Jun (100.3)
2023      53.0            Oct (9.8)       Sep (120.8)
2024      50.8            Dec (-30.2)       Jul (123.2)

Average temperature
Jan	 Feb	 Mar	 Apr	 May	 Jun	 Jul	 Aug	 Sep	 Oct	 Nov	 Dec	 
35.2	 34.2	 34.4	 50.0	 64.4	 88.4	 70.3	 55.7	 68.9	 62.2	 46.3	 1.6	 ]0;mrkell@csis3: ~/hw1[01;32mmrkell@csis3[00m:[01;34m~/hw1[00m$ exit
exit

Script done on Tue 07 Feb 2023 11:01:35 PM EST
